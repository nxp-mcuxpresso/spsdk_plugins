[build-system]
requires = ["setuptools >= 61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["spsdk_pkcs11", "spsdk_pkcs11.__pyinstaller"]

[tool.setuptools.dynamic]
version = { attr = "spsdk_pkcs11.__version__" }


[project]
dynamic = ["version"]
name = "spsdk-pkcs11"
description = "Signature Provider plugin for SPSDK using PKCS#11 interface"

requires-python = ">= 3.9"
dependencies = ["python-pkcs11>=0.8.1", "cached-property"]
authors = [{ name = "NXP" }]
maintainers = [{ name = "Michal Starecek", email = "spsdk@nxp.com" }]
readme = { file = "README.md", content-type = "text/markdown" }
license = { text = "BSD-3-Clause" }

keywords = ["NXP", "SPSDK", "pkcs11"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.entry-points]
"spsdk.sp" = { pkcs11 = "spsdk_pkcs11.provider" }
pyinstaller40 = { hook-dirs = "spsdk_pkcs11.__pyinstaller:get_hook_dirs" }

[project.urls]
Homepage = "https://github.com/nxp-mcuxpresso/spsdk_plugins/tree/master/pkcs11"
Issues = "https://github.com/nxp-mcuxpresso/spsdk_plugins/issues"


[tool.bumpversion]
current_version = "0.3.5"

[[tool.bumpversion.files]]
filename = "spsdk_pkcs11/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = "SW_Content_Register_spsdk_pkcs11.txt"
search = "{current_version}"
replace = "{new_version}"


[tool.pytest.ini_options]
testpaths = ["tests"]
junit_family = "xunit1"

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "safe_main()", "sys.exit(main())"]

[tool.coverage.run]
relative_files = true

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100

[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true

[tool.pydocstyle]
convention = "google"
add_ignore = "D105,D301"
match = '(?!test_|__version__).*\.py'

[tool.pylint]
format = { max-line-length = 120 }
"messages control" = { disable = ["logging-fstring-interpolation"] }


[tool.nxp_codecheck]
git_parent_branch = "origin/master"
output_directory = "reports"
default_check_paths = ["spsdk_pkcs11"]
checkers = [
    { "pytest" = { kwargs = { disable_xdist = true } } },
    { "gitcov" = { info_only = true } },
    "pylint",
    "mypy",
    "dependencies",
    "pydocstyle",
    "ruff",
    { "radon_c" = { info_only = true } },
    "radon_d",
    "black",
    "isort",
    "copyright",
    "py_headers",
    { "cspell" = { info_only = true } },
    { "bandit" = { info_only = false, kwargs = { "severity-level" = "medium" } } },
]

[tool.release-tools.blackduck_sca]
project_name = "spsdk_plugins_pkcs11"
include_detector_types = ["setuptools"]
sbom_location = "SBOM-spsdk_plugins_pkcs11.spdx.json"

[tool.release-tools.scr]
scr_file = "SW_Content_Register_spsdk_pkcs11.txt"
